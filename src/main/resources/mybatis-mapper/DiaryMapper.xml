<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamY.angryBox.mapper.DiaryMapper">

    <!--    angryPhaseId 유효성검사 -->
    <select id="selectAngryId" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM angry_phase
        WHERE id = #{angryPhaseId}
    </select>

    <!-- 다이어리 저장 및 id 값 조회-->
    <select id="insertDiary" statementType="CALLABLE" parameterType="DiaryVO" resultType="int">
        { CALL INSERT_DIARY( #{memberId}, #{title}, #{content}, #{isPublic}, #{angryPhaseId}, #{coinBankId} ) }
    </select>
    <insert id="insertDiaryFile">
        INSERT INTO diary_file(diary_id, file_id, file_no) VALUES( #{diaryId}, #{fileId}, #{fileNo} )
    </insert>


    <!-- 다이어리 목록 조회 (저금통별) -->
    <resultMap id="selectDiaryListInCoinBankResultMap" type="DiaryVO">
        <result property="id" javaType="int" column="id" jdbcType="INTEGER" />
        <result property="memberId" javaType="int" column="member_id" jdbcType="INTEGER" />
        <result property="diaryNo" javaType="int" column="diary_no" jdbcType="INTEGER" />
        <result property="title" javaType="string" column="title" jdbcType="VARCHAR"/>
        <result property="dateTime" javaType="string" column="write_date" jdbcType="TIMESTAMP" />
        <result property="angryPhaseId" javaType="int" column="angry_phase_id" jdbcType="INTEGER" />
        <result property="isPublic" javaType="int" column="is_public" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectDiaryListInCoinBank" parameterType="int" resultType="DiaryVO" resultMap="selectDiaryListInCoinBankResultMap">
        SELECT id, diary_no, member_id, title, write_date, angry_phase_id, is_public
        FROM diary
        WHERE member_id = #{memberId} AND coin_bank_id = #{coinBankId}
    </select>


    <!-- 다이어리 목록 조회 (연도 + 월별) -->
    <resultMap id="selectDiaryListInMonthResultMap" type="DiaryVO">
        <result property="id" javaType="int" column="id" jdbcType="INTEGER" />
        <result property="memberId" javaType="int" column="member_id" jdbcType="INTEGER" />
        <result property="diaryNo" javaType="int" column="diary_no" jdbcType="INTEGER" />
        <result property="title" javaType="string" column="title" jdbcType="VARCHAR"/>
        <result property="dateTime" javaType="string" column="write_date" jdbcType="TIMESTAMP" />
        <result property="angryPhaseId" javaType="int" column="angry_phase_id" jdbcType="INTEGER" />
        <result property="isPublic" javaType="int" column="is_public" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectDiaryListInMonth" parameterType="int" resultType="DiaryVO" resultMap="selectDiaryListInMonthResultMap">
        SELECT id, member_id, diary_no, title, write_date, angry_phase_id, is_public
        FROM diary
        WHERE member_id = #{memberId} AND YEAR(write_date) = #{year} AND MONTH(write_date) = #{month}
    </select>

<!--    날짜별 TOP 분노글 -->


<!-- 다이어리 상세 조회 -->
    <resultMap id="DiaryDetail" type="diaryVO">
        <result property="id" javaType="int" column="diary_id" jdbcType="INTEGER" />
        <result property="memberId" javaType="int" column="member_id" jdbcType="INTEGER" />
        <result property="diaryNo" javaType="int" column="diary_no" jdbcType="INTEGER" />
        <result property="title" javaType="string" column="title" jdbcType="VARCHAR" />
        <result property="content" javaType="string" column="content" jdbcType="VARCHAR" />
        <result property="dateTime" javaType="string" column="write_date" jdbcType="TIMESTAMP" />
        <result property="angryPhaseId" javaType="int" column="angry_phase_id" jdbcType="INTEGER" />
        <result property="isPublic" javaType="int" column="is_public" jdbcType="TINYINT" />
        <result property="todackCount" javaType="int" column="todack_count" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="FileDetail" type="fileVO">
        <result property="id" javaType="int" column="file_id" jdbcType="INTEGER" />
        <result property="systemFileName" javaType="string" column="system_file_name" jdbcType="VARCHAR" />
        <result property="fileNo" javaType="int" column="file_no" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="selectDiaryDetailResultMap" type="DiaryFileVO">
        <collection property="diaryVO" resultMap="DiaryDetail" />
        <collection property="fileVO" resultMap="FileDetail" />
    </resultMap>
    <select id="selectDiaryDetail" parameterType="int" resultType="DiaryFileVO" resultMap="selectDiaryDetailResultMap" >
        SELECT d.id AS diary_id, d.member_id, d.diary_no, d.title, d.content, d.write_date, d.angry_phase_id, d.is_public, d.todack_count, f.id AS file_id, f.original_file_name, f.system_file_name, f.file_size, f.file_type, df.file_no
        FROM diary AS d
                 LEFT JOIN diary_file AS df
                            ON d.id = df.diary_id
                 LEFT JOIN file AS f
                           ON df.file_id = f.id
                 LEFT JOIN angry_phase AS ap
                           ON d.angry_phase_id = ap.id
        WHERE d.id = #{diaryId}
        ORDER BY df.file_no
    </select>


<!--    다이어리 변경(삭제, 수정) 관련, 작성자와 변경 요청자 일치 여부 확인 -->
    <select id="selectDiaryMemberId" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM diary
        WHERE id = #{diaryId} AND member_id = #{memberId}
    </select>

<!--    다이어리 삭제 -> TOP글, 대나무숲 에도 반영 필요 -->
    <delete id="deleteDiary" parameterType="int" >
        { CALL DELETE_DIARY( #{diaryId}, #{memberId} ) }
    </delete>

<!--    다이어리 수정 -->
    <update id="updateDiary" parameterType="DiaryVO">
        UPDATE diary SET title = #{title}, content = #{content}, is_public = #{isPublic}, angry_phase_id = #{angryPhaseId}
        WHERE id = #{id}
    </update>
    <delete id="deleteFileInDiary" parameterType="int">
        { CALL DELETE_FILE_IN_DIARY( #{fileId} )  }
    </delete>
    <select id="selectMaxFileNo" parameterType="int" resultType="int">
        SELECT IFNULL(MAX(df.file_no), 0)
        FROM diary AS d
             RIGHT JOIN diary_file AS df
                    ON d.id = df.diary_id
             LEFT JOIN file AS f
                   ON df.file_id = f.id
        WHERE d.id = #{diaryId};
    </select>

<!--    angryName 목록  조회 -->






<!--    다이어리 전체 목록 -> isPublic 1인 것들만 (대나무숲) -->
    <!--    <resultMap id="selectDiaryListResultMap" type="DiaryVO">-->
    <!--        <result property="id" javaType="int" column="id" jdbcType="INTEGER" />-->
    <!--        <result property="memberId" javaType="int" column="member_id" jdbcType="INTEGER" />-->
    <!--        <result property="diaryNo" javaType="int" column="diary_no" jdbcType="INTEGER" />-->
    <!--        <result property="title" javaType="string" column="title" jdbcType="VARCHAR"/>-->
    <!--        <result property="dateTime" javaType="string" column="write_date" jdbcType="TIMESTAMP" />-->
    <!--        <result property="angryName" javaType="string" column="angry_name" jdbcType="VARCHAR" />-->
    <!--        <result property="isPublic" javaType="int" column="is_public" jdbcType="INTEGER" />-->
    <!--    </resultMap>-->
    <!--    <select id="selectDiaryList" resultType="DiaryVO" resultMap="selectDiaryListResultMap">-->
    <!--        SELECT d.id, member_id, diary_no, title, write_date, ap.angry_name, is_public-->
    <!--        FROM diary AS d-->
    <!--            LEFT JOIN angry_phase AS ap-->
    <!--                ON d.angry_figure = ap.phase-->
    <!--    </select>-->

</mapper>