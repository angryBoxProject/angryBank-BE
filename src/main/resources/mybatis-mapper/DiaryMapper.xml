<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamY.angryBox.mapper.DiaryMapper">

    <!--    angryPhaseId 유효성검사 -->
    <select id="selectAngryId" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM angry_phase
        WHERE id = #{angryPhaseId}
    </select>
    <!--    coin_bank와 member_id 유효성 검사 -->
    <select id="selectCoinBankMemberId" parameterType="int" resultType="int">
        SELECT COUNT(expired)
        FROM coin_bank
        WHERE id = #{coinBankId} AND member_id = #{memberId} AND expired = #{expired};
    </select>
    <!--    다이어리 작성자 확인 -->
    <select id="selectDiaryMemberId" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM diary
        WHERE id = #{diaryId} AND member_id = #{memberId}
    </select>
<!--    다이어리에 해당 파일 있는지 확인-->
<!--    //SELECT COUNT(*)-->
<!--    FROM diary_file-->
<!--    WHERE diary_id = 4 AND file_id = 8 AND file_no = 1;-->


    <!-- 다이어리 저장 및 id 값 조회-->
    <select id="insertDiary" statementType="CALLABLE" parameterType="DiaryVO" resultType="int">
        { CALL INSERT_DIARY( #{memberId}, #{title}, #{content}, #{isPublic}, #{angryPhaseId}, #{coinBankId} ) }
    </select>
    <insert id="insertDiaryFile">
        INSERT INTO diary_file(diary_id, file_id, file_no) VALUES( #{diaryId}, #{fileId}, #{fileNo} )
    </insert>


    <!-- 다이어리 목록 조회 (저금통별) -->
    <select id="selectDiaryListInCoinBank" parameterType="int" resultType="DiaryVO">
        SELECT id, member_id, diary_no, title, DATE(write_date) AS write_date, angry_phase_id, is_public, todack_count, view_count
        FROM diary
        WHERE member_id = #{memberId} AND coin_bank_id = #{coinBankId} AND id <![CDATA[<]]> #{lastDiaryId}
        ORDER BY id DESC
        LIMIT #{size}
    </select>
    <!-- 다이어리 목록 조회 (연도 + 월별) -->
    <select id="selectDiaryListInMonth" parameterType="int" resultType="DiaryVO">
        SELECT id, member_id, diary_no, title, DATE(write_date) AS write_date, angry_phase_id, is_public, todack_count, view_count
        FROM diary
        WHERE member_id = #{memberId} AND YEAR(write_date) = #{writeYear} AND MONTH(write_date) = #{writeMonth} AND id <![CDATA[<]]> #{lastDiaryId}
        ORDER BY id DESC
        LIMIT #{size}
    </select>
<!--    날짜별 TOP 분노글 -->
    <select id="selectDailyTop" parameterType="int" resultType="DiaryVO">
        SELECT id, member_id, diary_no, title, DATE(write_date) AS write_date, angry_phase_id, is_public, todack_count, view_count
        FROM diary
        WHERE YEAR(write_date) = #{writeYear} AND MONTH(write_date) = #{writeMonth} AND DAY(write_date) = #{writeDay} AND is_public = #{isPublic} AND id <![CDATA[<]]> #{lastDiaryId}
        ORDER BY todack_count DESC
        LIMIT #{size}
    </select>
<!--    오늘의 TOP 분노글-->
        <resultMap id="selectDiaryListResultMap" type="DiaryVO">
            <result property="id" javaType="int" column="id" jdbcType="INTEGER" />
            <result property="memberId" javaType="int" column="member_id" jdbcType="INTEGER" />
            <result property="diaryNo" javaType="int" column="diary_no" jdbcType="INTEGER" />
            <result property="title" javaType="string" column="title" jdbcType="VARCHAR"/>
            <result property="dateTime" javaType="string" column="write_date" jdbcType="TIMESTAMP" />
            <result property="angryPhaseId" javaType="int" column="angry_phase_id" jdbcType="INTEGER" />
            <result property="isPublic" javaType="int" column="is_public" jdbcType="INTEGER" />
            <result property="todackCount" javaType="int" column="todack_count" jdbcType="INTEGER" />
            <result property="viewCount" javaType="int" column="view_count" jdbcType="INTEGER" />
        </resultMap>
    <select id="selectTodayTop" parameterType="int" resultType="DiaryVO" resultMap="selectDiaryListResultMap">
        SELECT d.id AS id, d.member_id AS member_id, d.title AS title, DATE(d.write_date) AS write_date, d.angry_phase_id AS angry_phase_id, d.todack_count AS todack_count, d.view_count AS view_count
        FROM top_diary_today AS tdt
            LEFT JOIN diary AS d
                ON tdt.diary_id = d.id
        WHERE id <![CDATA[<]]> #{lastDiaryId}
        ORDER BY tdt.id;
    </select>
    <!--    대나무숲 -->
    <select id="bambooGrove" parameterType="int" resultType="DiaryVO" >
        SELECT id, member_id, diary_no, title, write_date, angry_phase_id, todack_count, view_count
        FROM diary
        WHERE id <![CDATA[<]]> #{lastDiaryId} AND is_public = #{isPublic}
        ORDER BY id DESC
        LIMIT #{size}
    </select>

<!--    마지막 id 조회 -->
    <select id="selectLastId" resultType="int">
        SELECT MAX(id)
        FROM diary
    </select>

<!-- 다이어리 상세 조회 -->
    <resultMap id="DiaryDetail" type="diaryVO">
        <result property="id" javaType="int" column="diary_id" jdbcType="INTEGER" />
        <result property="memberId" javaType="int" column="member_id" jdbcType="INTEGER" />
        <result property="diaryNo" javaType="int" column="diary_no" jdbcType="INTEGER" />
        <result property="title" javaType="string" column="title" jdbcType="VARCHAR" />
        <result property="content" javaType="string" column="content" jdbcType="VARCHAR" />
        <result property="dateTime" javaType="string" column="write_date" jdbcType="TIMESTAMP" />
        <result property="angryPhaseId" javaType="int" column="angry_phase_id" jdbcType="INTEGER" />
        <result property="isPublic" javaType="int" column="is_public" jdbcType="TINYINT" />
        <result property="todackCount" javaType="int" column="todack_count" jdbcType="INTEGER" />
        <result property="viewCount" javaType="int" column="view_count" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="FileDetail" type="fileVO">
        <result property="id" javaType="int" column="file_id" jdbcType="INTEGER" />
        <result property="systemFileName" javaType="string" column="system_file_name" jdbcType="VARCHAR" />
        <result property="fileNo" javaType="int" column="file_no" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="selectDiaryDetailResultMap" type="DiaryFileVO">
        <collection property="diaryVO" resultMap="DiaryDetail" />
        <collection property="fileVO" resultMap="FileDetail" />
    </resultMap>
    <select id="selectDiaryDetail" parameterType="int" resultType="DiaryFileVO" resultMap="selectDiaryDetailResultMap" >
        { CALL SELECT_DIARY( #{diaryId} ) }
    </select>

<!--    다이어리 삭제 -> TOP글, 대나무숲 에도 반영 필요 -->
    <delete id="deleteDiary" parameterType="int" >
        { CALL DELETE_DIARY( #{diaryId}, #{memberId} ) }
    </delete>


<!--    다이어리 수정 -->
    <update id="updateDiary" parameterType="DiaryVO">
        UPDATE diary SET title = #{title}, content = #{content}, is_public = #{isPublic}, angry_phase_id = #{angryPhaseId}
        WHERE id = #{id}
    </update>
    <delete id="deleteFileInDiary" parameterType="int">
        { CALL DELETE_FILE_IN_DIARY( #{fileId} )  }
    </delete>
    <select id="selectMaxFileNo" parameterType="int" resultType="int">
        SELECT IFNULL(MAX(df.file_no), 0)
        FROM diary AS d
             RIGHT JOIN diary_file AS df
                    ON d.id = df.diary_id
             LEFT JOIN file AS f
                   ON df.file_id = f.id
        WHERE d.id = #{diaryId};
    </select>

<!--    저금통 별 다이어리 개수 -->
    <select id="selectDiaryCountInCoinBank" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM diary
        WHERE coin_bank_id = #{coinBankId} AND member_id = #{memberId};
    </select>

<!--    저금통 별 토댝 총 개수 -->
    <select id="selectTodackCountInCoinBank" parameterType="int" resultType="int">
        SELECT SUM(todack_count)
        FROM diary
        WHERE coin_bank_id = #{coinBankId} AND member_id = #{memberId};
    </select>


<!--    angryName 목록  조회 -->


    <select id="searchDiary" resultType="DiaryVO">
        SELECT id, member_id, diary_no, title, write_date, angry_phase_id, todack_count, view_count
        FROM diary
        WHERE is_public = 1 AND (title LIKE CONCAT('%', #{searchKeyword}, '%') OR content LIKE CONCAT('%', #{searchKeyword}, '%')) AND id <![CDATA[<]]> #{lastDiaryId}
        ORDER BY id desc
        LIMIT #{size}
    </select>

</mapper>